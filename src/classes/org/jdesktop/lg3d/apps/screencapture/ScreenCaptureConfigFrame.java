/*
 * ScreenCaptureConfigFrame.java
 *
 * Created on May 4, 2006, 8:52 PM
 */

package org.jdesktop.lg3d.apps.screencapture;

import java.io.File;
import java.lang.ref.WeakReference;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.jdesktop.lg3d.displayserver.AppConnectorPrivate;
import org.jdesktop.lg3d.displayserver.ScreenCaptureEvent;

/**
 *
 * @author  paulby
 */
public class ScreenCaptureConfigFrame extends javax.swing.JFrame {
    
    private File saveDirectory = new File(System.getProperty("user.dir"));
    private int snapshotDelay = 2;
    
    private static WeakReference<ScreenCaptureConfigFrame> captureFrame = null;
    
    /** Creates new form ScreenCaptureConfigFrame */
    public ScreenCaptureConfigFrame() {
        initComponents();
        
        // JFileChooser does not work yet
        jPanel1.remove(browseButton);
        
        locationTF.setText(saveDirectory.getAbsolutePath());
        delaySpinner.setValue(new Integer(snapshotDelay));
    }
    
    public static ScreenCaptureConfigFrame getScreenCaptureFrame() {
        if (captureFrame==null || captureFrame.get()==null)
            captureFrame = new WeakReference(new ScreenCaptureConfigFrame());
        
        return captureFrame.get();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        locationTF = new javax.swing.JTextField();
        browseButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        delaySpinner = new javax.swing.JSpinner();
        titlePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        bottomPanel = new javax.swing.JPanel();
        snapshotButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel2.setText("File Location");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
        jPanel1.add(jLabel2, gridBagConstraints);

        locationTF.setColumns(15);
        locationTF.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        locationTF.setText("jTextField1");
        locationTF.setToolTipText("Directory in which images will be stored");
        jPanel1.add(locationTF, new java.awt.GridBagConstraints());

        browseButton.setText("Browse");
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 0);
        jPanel1.add(browseButton, gridBagConstraints);

        jLabel3.setText("Snapshot Delay (secs)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
        jPanel1.add(jLabel3, gridBagConstraints);

        delaySpinner.setToolTipText("Delay before snapshot is taken");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        jPanel1.add(delaySpinner, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        titlePanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel1.setText("Screen Capture Configuration");
        titlePanel.add(jLabel1);

        getContentPane().add(titlePanel, java.awt.BorderLayout.NORTH);

        snapshotButton.setText("Take Snapshot");
        snapshotButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                snapshotButtonActionPerformed(evt);
            }
        });

        bottomPanel.add(snapshotButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        bottomPanel.add(cancelButton);

        getContentPane().add(bottomPanel, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void snapshotButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snapshotButtonActionPerformed
        snapshotDelay = ((Integer)delaySpinner.getValue()).intValue();
        saveDirectory = new File(locationTF.getText());
        setVisible(false);
        dispose();
        
        TimerTask taskPerformer = new TimerTask() {
          public void run() {
            AppConnectorPrivate.getAppConnector().postEvent(new ScreenCaptureEvent(saveDirectory.getAbsolutePath()), null); 
            System.out.println("SNAPSHOT ********************");
          }
        };
        Timer timer = new Timer();
        timer.schedule(taskPerformer, snapshotDelay*1000);

    }//GEN-LAST:event_snapshotButtonActionPerformed

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
// TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setDialogTitle("Select Destination Directory");
        chooser.setCurrentDirectory(saveDirectory);
        int returnVal = chooser.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            File newDir = chooser.getCurrentDirectory();
            if (newDir.canWrite()) {
                locationTF.setText(chooser.getCurrentDirectory().getAbsolutePath());
                saveDirectory = newDir;
            } else {
                JOptionPane.showMessageDialog(this, 
                        "You do not have write\npermission in selected directory",
                        "Error", 
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_browseButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ScreenCaptureConfigFrame.getScreenCaptureFrame().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JButton browseButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JSpinner delaySpinner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField locationTF;
    private javax.swing.JButton snapshotButton;
    private javax.swing.JPanel titlePanel;
    // End of variables declaration//GEN-END:variables
    
}
